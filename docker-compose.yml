version: '3'
services:
  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    networks:
      - dotnet-challenge
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    networks:
      - dotnet-challenge
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zoo1

  handheld-scanner:
    image: confluentinc/cp-kafka:latest
    container_name: handheld-scanner
    networks:
      - dotnet-challenge
    depends_on:
      - kafka1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181
      KAFKA_TOPIC: handheld-scanner
      KAFKA_SLEEP: "10"
    command: |
      sh -c 'while true; do echo {"product_id": "P-$$(( $$RANDOM % 10 + 1 ))","timestamp":"$$(date -u +'%Y-%m-%dT%H:%M:%S.%NZ')","scanner_id":"SC-$$(( $$RANDOM % 1000 + 900 ))"} \
      | kafka-console-producer --broker-list kafka1:19092 --topic $$KAFKA_TOPIC; sleep $$KAFKA_SLEEP; done'
  
  pallet-scanner:
    image: confluentinc/cp-kafka:latest
    container_name: pallet-scanner
    networks:
      - dotnet-challenge
    depends_on:
      - kafka1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181
      KAFKA_TOPIC: pallet-scanner
      KAFKA_SLEEP: "10"
    command: |
      sh -c 'while true; do echo \|P-$$(( $$RANDOM % 10 + 1 ))\|$$(( $$RANDOM % 1000 + 900 ))\|$$(date -u +'%Y-%m-%dT%H:%M:%S.%NZ')\| \
      | kafka-console-producer --broker-list kafka1:19092 --topic $$KAFKA_TOPIC; sleep $$KAFKA_SLEEP; done'
  
networks:
  dotnet-challenge:
    name: dotnet-challenge
    external: false